/*
 * core.gradle
 *
 * Sub-project of Jython: interpreter core. We to generate and compile the
 * implementation of the core Python objects, exporting a minimal API.
 */

plugins {
    id 'java-library'
}

dependencies {
    //implementation 'org.ow2.asm:asm:9.+'

    // JUnit 5 dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}


test {
    useJUnitPlatform {  // JUnit5 as standard
        includeEngines 'junit-jupiter'
    }
}


// Some adjustments to Javadoc to ensure complex tables readable

tasks.withType(Javadoc) {

    options.showFromPackage()

    // addStringOption inserts one "-" for us :/
    // CSS adjustments (initially only for table style)
    options.addStringOption("-add-stylesheet",
        "src/main/javadoc/project-styles.css")

    // Enable "custom" tags used in JDK Javadoc since JSR-335.
    // https://nipafx.dev/javadoc-tags-apiNote-implSpec-implNote
    options.tags(
        "apiNote:a:API Note:",
        "implSpec:a:Implementation Requirements:",
        "implNote:a:Implementation Note:",
        // Unfortunately we must add these standard tags too,
        // so they come after the ones we want to enable.
        "param", "return", "throws",
        "since", "version", "serialData", "see")
}

