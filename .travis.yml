#Â https://docs.travis-ci.com/user/languages/java/
# https://docs.travis-ci.com/user/reference/osx/
# https://docs.travis-ci.com/user/reference/windows/
os: linux
dist: focal
language: java

addons:
  apt:  # only active on Linux
    packages:
      - ant

  hostname: jyshort


jobs:
  include:

    #- name: "openjdk8 on Linux"
    #  dist: xenial
    #  jdk: openjdk8


    #- name: "openjdk11 on Linux"
    #  jdk: openjdk11


    #- name: "openjdk13 on Linux"
    #  jdk: openjdk13


    #- name: "openjdk@8 on macOS xcode11.6"
    #  os: osx
    #  osx_image: xcode11.6  # Supports homebrew bundle without needing update
    #  # https://travis-ci.community/t/macos-build-fails-because-of-homebrew-bundle-unknown-command/7296/26
    #  # https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-on-macos
    #  addons:
    #    homebrew:
    #      taps:
    #        - homebrew/cask-versions # for openjdk
    #      packages:
    #        - ant
    #        - openjdk@8
    #  before_install:
    #    # Probe the brew Cellar
    #    - brew --prefix
    #    - brew list openjdk@8
    #    # Make available to the JDK switcher.
    #    # See: https://formulae.brew.sh/formula/openjdk@8
    #    - sudo ln -sfn $(brew --prefix)/opt/openjdk@8/libexec/openjdk.jdk
    #        /Library/Java/JavaVirtualMachines/openjdk-8.jdk
    #    # Add the required JDK to the path
    #    - export JAVA_HOME="$(/usr/libexec/java_home -v1.8)"
    #    - echo $JAVA_HOME
    #    - export PATH="$JAVA_HOME/bin:$PATH"


    - name: "openjdk11 on Windows"
      os: windows
      language: bash  # Travis CI Windows does not yet support language: java
      before_install:
        - pwd # /c/Users/travis/build/<github-user>/<repo-name>
        # Install the required JDK and ant
        - choco install openjdk11 ant
        # Chocolatey has updated the PATH, but only in powershell [Environment]
        # Dig out the path from [Environment] and translate it to Unix
        #- posh_path=$(powershell -NonInteractive -Command
        #    'write(([Environment]::GetEnvironmentVariable("PATH","Machine") + ";" +
        #            [Environment]::GetEnvironmentVariable("PATH","User")
        #        ).replace("\","/").replace("C:","/c").replace(";",":"))')
        #- echo $posh_path
        #- export PATH="$posh_path"
        # Can we get JAVA_HOME this way?
        - java_exe=$(powershell -NonInteractive -Command
            '$env:PATH=[Environment]::GetEnvironmentVariable("PATH","Machine");
            write((Get-Command java).Path)')
        - java_exe=$(cygpath "$java_exe")
        - echo $java_exe
        - export JAVA_HOME="${java_exe%/bin/*}"
        - echo $JAVA_HOME
        - export PATH="$JAVA_HOME/bin:$PATH"


    #- name: "Lint Python 2 code for syntax errors and undefined names"
    #  language: python  # lint Python code for syntax errors and undefined names
    #  python: 2.7
    #  install: pip install flake8
    #  script: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  allow_failures:
    - language: python
    - os: osx # remains flakey

#
# Common part to all hosts
#

# Install (i.e. build) Jython
install:
    # Confirm versions and paths (this has been a problem)
    - echo $PATH
    - echo $JAVA_HOME
    - java -version
    - ant -version
    # Build Jython
    #- ant developer-build
    #- dist/bin/jython -V


# Run the regression test (tweaked for Travis in build.xml)
script:
    # Disabled for now: only report environment
    - ant dump-env
    # Fairly full regression test
    #- ant regrtest-travis

